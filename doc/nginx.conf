# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   10;
    types_hash_max_size 2048;
    send_timeout 30s;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;


    include /etc/nginx/conf.d/*.conf;


    
    upstream read {
       #ip_hash;
       server 192.168.20.121:8081 weight=2 max_fails=2 fail_timeout=2;
       server 192.168.20.123:8081 weight=2 max_fails=2 fail_timeout=2;
    }

    upstream write {        
        #ip_hash;
       server 192.168.20.124:8081 weight=2 max_fails=2 fail_timeout=2;
       server 192.168.20.125:8081 weight=2 max_fails=2 fail_timeout=2;        
    } 



    server {
        listen 8080 ssl;
        server_name www.test.com;
        ssl on;
        send_timeout 30s;
        lingering_timeout 5s;
        ssl_certificate /etc/nginx/nginx/key/ca.crt;
        ssl_certificate_key /etc/nginx/nginx/key/server.key;
        ssl_session_timeout  5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        #ssl_ciphers  ALL：!ADH：!EXPORT56：RC4+RSA：+HIGH：+MEDIUM：+LOW：+SSLv2：+EXP;
        ssl_prefer_server_ciphers   on;
        location /{   
            proxy_pass http://read;
            proxy_set_header  X-Real-IP  $remote_addr;
    
            if ($request_method = "PUT"){
                proxy_pass http:write;
            }
        } 
    }

}

